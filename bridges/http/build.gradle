buildscript {
    repositories {
      maven { url 'https://plugins.gradle.org/m2/' }
    }
  dependencies {
    classpath 'com.netflix.nebula:gradle-ospackage-plugin:4.3.0'
  }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'nebula.ospackage-application'
apply plugin: 'maven'

group = 'ai.swim'
description = "Illustrate basic Swim concepts- ValueLane, MapLane, CommandLane, Recon and Java Objects"
sourceCompatibility = 1.8

repositories {
  maven {
    url 'https://repo.swim.it/swim-academy/'
    credentials {
      username "swim-academy"
      password "academy-swim"
    }
    authentication {
      digest(BasicAuthentication)
    }
  }
}

configurations.all {
  resolutionStrategy {
    cacheChangingModulesFor 3600, 'seconds'
  }
}

dependencies {
  compile 'ai.swim:swim-server-client:1.2.0.20180404071514'
}

configurations {
  testCompile.exclude group: 'ai.swim:swim-server'
}

compileJava {
  options.compilerArgs += ['-Xlint']
}

javadoc {
  options.charSet = 'UTF-8'
}

task runMain(type: JavaExec) {
  main = mainClassName
  systemProperties System.properties
}

task runClient(type: JavaExec) {
  main = 'ai.swim.client.Client'
  classpath = sourceSets.test.runtimeClasspath
  systemProperties System.properties
}

mainClassName = 'ai.swim.Main'